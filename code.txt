<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Simple Blogging Platform</title>
<style>
  body { font-family: Arial, sans-serif; background: #f0f2f5; margin: 0; padding: 20px; }
  h1 { text-align: center; color: #333; }
  form { background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); margin-bottom: 20px; }
  input, textarea { width: 100%; padding: 10px; margin: 5px 0; border-radius: 5px; border: 1px solid #ccc; }
  button { background: #007bff; color: #fff; border: none; padding: 10px 15px; border-radius: 5px; cursor: pointer; }
  button:hover { background: #0056b3; }
  .blog { background: #fff; padding: 15px; margin-bottom: 10px; border-radius: 8px; box-shadow: 0 0 5px rgba(0,0,0,0.1); }
  .blog h2 { margin: 0; color: #007bff; }
  .blog p { margin: 5px 0; color: #555; }
  .blog small { color: #888; }
  .blog button { background: #dc3545; margin-top: 5px; }
  .blog button.edit { background: #28a745; margin-right: 5px; }
</style>
</head>
<body>

<h1>Simple Blogging Platform</h1>

<form id="blogForm">
  <input type="hidden" id="blogId">
  <label>Title:</label>
  <input type="text" id="title" required>
  
  <label>Author:</label>
  <input type="text" id="author" required>
  
  <label>Content:</label>
  <textarea id="content" rows="5" required></textarea>
  
  <button type="submit">Add Blog</button>
</form>

<div id="blogsContainer"></div>

<script>
let blogs = [];

// Render all blogs
function renderBlogs() {
  const container = document.getElementById('blogsContainer');
  container.innerHTML = '';
  blogs.forEach((blog, index) => {
    container.innerHTML += `
      <div class="blog">
        <h2>${blog.title}</h2>
        <small>by ${blog.author}</small>
        <p>${blog.content}</p>
        <button class="edit" onclick="editBlog(${index})">Edit</button>
        <button onclick="deleteBlog(${index})">Delete</button>
      </div>
    `;
  });
}

// Handle form submit
document.getElementById('blogForm').addEventListener('submit', function(e) {
  e.preventDefault();
  const id = document.getElementById('blogId').value;
  const blog = {
    title: document.getElementById('title').value,
    author: document.getElementById('author').value,
    content: document.getElementById('content').value
  };
  
  if (id) {
    blogs[id] = blog;
    document.getElementById('blogId').value = '';
    this.querySelector('button').textContent = 'Add Blog';
  } else {
    blogs.push(blog);
  }
  
  this.reset();
  renderBlogs();
});

// Edit blog
function editBlog(index) {
  const blog = blogs[index];
  document.getElementById('blogId').value = index;
  document.getElementById('title').value = blog.title;
  document.getElementById('author').value = blog.author;
  document.getElementById('content').value = blog.content;
  document.querySelector('#blogForm button').textContent = 'Update Blog';
}

// Delete blog
function deleteBlog(index) {
  if (confirm('Are you sure you want to delete this blog?')) {
    blogs.splice(index, 1);
    renderBlogs();
  }
}

// Initial render
renderBlogs();
</script>

</body>
</html>